/*
 * generated by Xtext 2.13.0
 */
grammar InternalCurlBetterThanHttpie;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package aitchteeteepie.xtext.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package aitchteeteepie.xtext.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import aitchteeteepie.xtext.dsl.services.CurlBetterThanHttpieGrammarAccess;

}

@parser::members {

 	private CurlBetterThanHttpieGrammarAccess grammarAccess;

    public InternalCurlBetterThanHttpieParser(TokenStream input, CurlBetterThanHttpieGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "CommandLineInterface";
   	}

   	@Override
   	protected CurlBetterThanHttpieGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleCommandLineInterface
entryRuleCommandLineInterface returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandLineInterfaceRule()); }
	iv_ruleCommandLineInterface=ruleCommandLineInterface
	{ $current=$iv_ruleCommandLineInterface.current; }
	EOF;

// Rule CommandLineInterface
ruleCommandLineInterface returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCommandLineInterfaceAccess().getCommandLineInterfaceAction_0(),
					$current);
			}
		)
		otherlv_1='http'
		{
			newLeafNode(otherlv_1, grammarAccess.getCommandLineInterfaceAccess().getHttpKeyword_1());
		}
		(
			this_WS_2=RULE_WS
			{
				newLeafNode(this_WS_2, grammarAccess.getCommandLineInterfaceAccess().getWSTerminalRuleCall_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandLineInterfaceAccess().getFlagsFlagParserRuleCall_2_1_0());
					}
					lv_flags_3_0=ruleFlag
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandLineInterfaceRule());
						}
						add(
							$current,
							"flags",
							lv_flags_3_0,
							"aitchteeteepie.xtext.dsl.CurlBetterThanHttpie.Flag");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			this_WS_4=RULE_WS
			{
				newLeafNode(this_WS_4, grammarAccess.getCommandLineInterfaceAccess().getWSTerminalRuleCall_3());
			}
		)?
	)
;

// Entry rule entryRuleFlag
entryRuleFlag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFlagRule()); }
	iv_ruleFlag=ruleFlag
	{ $current=$iv_ruleFlag.current; }
	EOF;

// Rule Flag
ruleFlag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFlagAccess().getProxyFlagParserRuleCall_0());
		}
		this_ProxyFlag_0=ruleProxyFlag
		{
			$current = $this_ProxyFlag_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFlagAccess().getFormFlagParserRuleCall_1());
		}
		this_FormFlag_1=ruleFormFlag
		{
			$current = $this_FormFlag_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFlagAccess().getAuthFlagParserRuleCall_2());
		}
		this_AuthFlag_2=ruleAuthFlag
		{
			$current = $this_AuthFlag_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFlagAccess().getDownloadFlagParserRuleCall_3());
		}
		this_DownloadFlag_3=ruleDownloadFlag
		{
			$current = $this_DownloadFlag_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFlagAccess().getBodyFlagParserRuleCall_4());
		}
		this_BodyFlag_4=ruleBodyFlag
		{
			$current = $this_BodyFlag_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFlagAccess().getVersionFlagParserRuleCall_5());
		}
		this_VersionFlag_5=ruleVersionFlag
		{
			$current = $this_VersionFlag_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFlagAccess().getJsonFlagParserRuleCall_6());
		}
		this_JsonFlag_6=ruleJsonFlag
		{
			$current = $this_JsonFlag_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFlagAccess().getHelpFlagParserRuleCall_7());
		}
		this_HelpFlag_7=ruleHelpFlag
		{
			$current = $this_HelpFlag_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFlagAccess().getHeadersFlagParserRuleCall_8());
		}
		this_HeadersFlag_8=ruleHeadersFlag
		{
			$current = $this_HeadersFlag_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFlagAccess().getVerboseFlagParserRuleCall_9());
		}
		this_VerboseFlag_9=ruleVerboseFlag
		{
			$current = $this_VerboseFlag_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFlagAccess().getTimeoutFlagParserRuleCall_10());
		}
		this_TimeoutFlag_10=ruleTimeoutFlag
		{
			$current = $this_TimeoutFlag_10.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleHeadersFlag
entryRuleHeadersFlag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeadersFlagRule()); }
	iv_ruleHeadersFlag=ruleHeadersFlag
	{ $current=$iv_ruleHeadersFlag.current; }
	EOF;

// Rule HeadersFlag
ruleHeadersFlag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHeadersFlagAccess().getHeadersFlagAction_0(),
					$current);
			}
		)
		(
			otherlv_1='--header'
			{
				newLeafNode(otherlv_1, grammarAccess.getHeadersFlagAccess().getHeaderKeyword_1_0());
			}
			    |
			otherlv_2='-t'
			{
				newLeafNode(otherlv_2, grammarAccess.getHeadersFlagAccess().getTKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleBodyFlag
entryRuleBodyFlag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyFlagRule()); }
	iv_ruleBodyFlag=ruleBodyFlag
	{ $current=$iv_ruleBodyFlag.current; }
	EOF;

// Rule BodyFlag
ruleBodyFlag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBodyFlagAccess().getBodyFlagAction_0(),
					$current);
			}
		)
		(
			otherlv_1='--body'
			{
				newLeafNode(otherlv_1, grammarAccess.getBodyFlagAccess().getBodyKeyword_1_0());
			}
			    |
			otherlv_2='-b'
			{
				newLeafNode(otherlv_2, grammarAccess.getBodyFlagAccess().getBKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleJsonFlag
entryRuleJsonFlag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonFlagRule()); }
	iv_ruleJsonFlag=ruleJsonFlag
	{ $current=$iv_ruleJsonFlag.current; }
	EOF;

// Rule JsonFlag
ruleJsonFlag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getJsonFlagAccess().getJsonFlagAction_0(),
					$current);
			}
		)
		(
			otherlv_1='--json'
			{
				newLeafNode(otherlv_1, grammarAccess.getJsonFlagAccess().getJsonKeyword_1_0());
			}
			    |
			otherlv_2='-j'
			{
				newLeafNode(otherlv_2, grammarAccess.getJsonFlagAccess().getJKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleFormFlag
entryRuleFormFlag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormFlagRule()); }
	iv_ruleFormFlag=ruleFormFlag
	{ $current=$iv_ruleFormFlag.current; }
	EOF;

// Rule FormFlag
ruleFormFlag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFormFlagAccess().getFormFlagAction_0(),
					$current);
			}
		)
		(
			otherlv_1='--form'
			{
				newLeafNode(otherlv_1, grammarAccess.getFormFlagAccess().getFormKeyword_1_0());
			}
			    |
			otherlv_2='-f'
			{
				newLeafNode(otherlv_2, grammarAccess.getFormFlagAccess().getFKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleProxyFlag
entryRuleProxyFlag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProxyFlagRule()); }
	iv_ruleProxyFlag=ruleProxyFlag
	{ $current=$iv_ruleProxyFlag.current; }
	EOF;

// Rule ProxyFlag
ruleProxyFlag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='--proxy'
		{
			newLeafNode(otherlv_0, grammarAccess.getProxyFlagAccess().getProxyKeyword_0());
		}
		(
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getProxyFlagAccess().getEqualsSignKeyword_1_0());
			}
			    |
			this_WS_2=RULE_WS
			{
				newLeafNode(this_WS_2, grammarAccess.getProxyFlagAccess().getWSTerminalRuleCall_1_1());
			}
		)
		(
			(
				(
					(
						(
							lv_protocol_3_0=RULE_BASIC_STRING
							{
								newLeafNode(lv_protocol_3_0, grammarAccess.getProxyFlagAccess().getProtocolBASIC_STRINGTerminalRuleCall_2_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getProxyFlagRule());
								}
								setWithLastConsumed(
									$current,
									"protocol",
									lv_protocol_3_0,
									"aitchteeteepie.xtext.dsl.CurlBetterThanHttpie.BASIC_STRING");
							}
						)
					)
					otherlv_4=':'
					{
						newLeafNode(otherlv_4, grammarAccess.getProxyFlagAccess().getColonKeyword_2_0_0_1());
					}
				)
				(
					(
						(
							lv_proxyProtocol_5_0=RULE_BASIC_STRING
							{
								newLeafNode(lv_proxyProtocol_5_0, grammarAccess.getProxyFlagAccess().getProxyProtocolBASIC_STRINGTerminalRuleCall_2_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getProxyFlagRule());
								}
								setWithLastConsumed(
									$current,
									"proxyProtocol",
									lv_proxyProtocol_5_0,
									"aitchteeteepie.xtext.dsl.CurlBetterThanHttpie.BASIC_STRING");
							}
						)
					)
					otherlv_6='://'
					{
						newLeafNode(otherlv_6, grammarAccess.getProxyFlagAccess().getColonSolidusSolidusKeyword_2_0_1_1());
					}
				)?
			)
			    |
			(
				(
					(
						lv_proxyProtocol_7_0=RULE_BASIC_STRING
						{
							newLeafNode(lv_proxyProtocol_7_0, grammarAccess.getProxyFlagAccess().getProxyProtocolBASIC_STRINGTerminalRuleCall_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getProxyFlagRule());
							}
							setWithLastConsumed(
								$current,
								"proxyProtocol",
								lv_proxyProtocol_7_0,
								"aitchteeteepie.xtext.dsl.CurlBetterThanHttpie.BASIC_STRING");
						}
					)
				)
				otherlv_8='://'
				{
					newLeafNode(otherlv_8, grammarAccess.getProxyFlagAccess().getColonSolidusSolidusKeyword_2_1_1());
				}
			)
		)
		(
			(
				(
					lv_username_9_0=RULE_STRING_UP
					{
						newLeafNode(lv_username_9_0, grammarAccess.getProxyFlagAccess().getUsernameSTRING_UPTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProxyFlagRule());
						}
						setWithLastConsumed(
							$current,
							"username",
							lv_username_9_0,
							"aitchteeteepie.xtext.dsl.CurlBetterThanHttpie.STRING_UP");
					}
				)
			)
			otherlv_10=':'
			{
				newLeafNode(otherlv_10, grammarAccess.getProxyFlagAccess().getColonKeyword_3_1());
			}
			(
				(
					lv_password_11_0=RULE_STRING_UP
					{
						newLeafNode(lv_password_11_0, grammarAccess.getProxyFlagAccess().getPasswordSTRING_UPTerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProxyFlagRule());
						}
						setWithLastConsumed(
							$current,
							"password",
							lv_password_11_0,
							"aitchteeteepie.xtext.dsl.CurlBetterThanHttpie.STRING_UP");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAuthFlag
entryRuleAuthFlag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAuthFlagRule()); }
	iv_ruleAuthFlag=ruleAuthFlag
	{ $current=$iv_ruleAuthFlag.current; }
	EOF;

// Rule AuthFlag
ruleAuthFlag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='--auth'
		{
			newLeafNode(otherlv_0, grammarAccess.getAuthFlagAccess().getAuthKeyword_0());
		}
		    |
		otherlv_1='-a'
		{
			newLeafNode(otherlv_1, grammarAccess.getAuthFlagAccess().getAKeyword_1());
		}
	)
;

// Entry rule entryRuleDownloadFlag
entryRuleDownloadFlag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDownloadFlagRule()); }
	iv_ruleDownloadFlag=ruleDownloadFlag
	{ $current=$iv_ruleDownloadFlag.current; }
	EOF;

// Rule DownloadFlag
ruleDownloadFlag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDownloadFlagAccess().getDownloadFlagAction_0(),
					$current);
			}
		)
		(
			otherlv_1='--download'
			{
				newLeafNode(otherlv_1, grammarAccess.getDownloadFlagAccess().getDownloadKeyword_1_0());
			}
			    |
			otherlv_2='-d'
			{
				newLeafNode(otherlv_2, grammarAccess.getDownloadFlagAccess().getDKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleHelpFlag
entryRuleHelpFlag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHelpFlagRule()); }
	iv_ruleHelpFlag=ruleHelpFlag
	{ $current=$iv_ruleHelpFlag.current; }
	EOF;

// Rule HelpFlag
ruleHelpFlag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHelpFlagAccess().getHelpFlagAction_0(),
					$current);
			}
		)
		(
			otherlv_1='--help'
			{
				newLeafNode(otherlv_1, grammarAccess.getHelpFlagAccess().getHelpKeyword_1_0());
			}
			    |
			otherlv_2='-h'
			{
				newLeafNode(otherlv_2, grammarAccess.getHelpFlagAccess().getHKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleVersionFlag
entryRuleVersionFlag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVersionFlagRule()); }
	iv_ruleVersionFlag=ruleVersionFlag
	{ $current=$iv_ruleVersionFlag.current; }
	EOF;

// Rule VersionFlag
ruleVersionFlag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVersionFlagAccess().getVersionFlagAction_0(),
					$current);
			}
		)
		otherlv_1='--version'
		{
			newLeafNode(otherlv_1, grammarAccess.getVersionFlagAccess().getVersionKeyword_1());
		}
	)
;

// Entry rule entryRuleVerboseFlag
entryRuleVerboseFlag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVerboseFlagRule()); }
	iv_ruleVerboseFlag=ruleVerboseFlag
	{ $current=$iv_ruleVerboseFlag.current; }
	EOF;

// Rule VerboseFlag
ruleVerboseFlag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVerboseFlagAccess().getVerboseFlagAction_0(),
					$current);
			}
		)
		(
			otherlv_1='--verbose'
			{
				newLeafNode(otherlv_1, grammarAccess.getVerboseFlagAccess().getVerboseKeyword_1_0());
			}
			    |
			otherlv_2='-v'
			{
				newLeafNode(otherlv_2, grammarAccess.getVerboseFlagAccess().getVKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleTimeoutFlag
entryRuleTimeoutFlag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeoutFlagRule()); }
	iv_ruleTimeoutFlag=ruleTimeoutFlag
	{ $current=$iv_ruleTimeoutFlag.current; }
	EOF;

// Rule TimeoutFlag
ruleTimeoutFlag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	otherlv_0='--timeout'
	{
		newLeafNode(otherlv_0, grammarAccess.getTimeoutFlagAccess().getTimeoutKeyword());
	}
;

fragment RULE_DIGIT : '0'..'9';

fragment RULE_LETTER : ('a'..'z'|'A'..'Z');

fragment RULE_SPECIAL_UP : ('-'|'.'|'_'|'~'|'/'|'?'|'#'|'['|']'|'!'|'$'|'&'|'('|')'|'*'|'+'|','|'|'|';');

RULE_WS : (' '|'\t')+;

fragment RULE_INT : ('0'|'1'..'9' RULE_DIGIT*);

RULE_FLOAT : (RULE_INT|RULE_INT? '.' RULE_DIGIT* (('E'|'e') RULE_INT)?);

RULE_BASIC_STRING : (RULE_DIGIT|RULE_LETTER)+;

RULE_STRING_UP : (RULE_DIGIT|RULE_LETTER|RULE_SPECIAL_UP);
