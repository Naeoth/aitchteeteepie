grammar aitchteeteepie.xtext.dsl.CurlBetterThanHttpie

import "platform:/resource/aitchteeteepie/model/aitchteeteepie.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

CommandLineInterface returns CommandLineInterface:
	{CommandLineInterface}
	'http' (WS flags+=Flag)* WS?;// (WS method=Method)? WS (protocol=BASIC_STRING '://')? (url=STRING (':' port=INT)? | (':' (port=INT)?)) ('/' resource=STRING)? (WS '--')? (WS items+=Item)* WS?;

// FLAGS
Flag returns Flag:
	ProxyFlag | FormFlag | AuthFlag | DownloadFlag | BodyFlag | VersionFlag | JsonFlag | HelpFlag | HeadersFlag | VerboseFlag | TimeoutFlag;

HeadersFlag returns HeadersFlag:
	{HeadersFlag}
	('--header' | '-t');

BodyFlag returns BodyFlag:
	{BodyFlag}
	('--body' | '-b');
	
JsonFlag returns JsonFlag:
	{JsonFlag}
	('--json' | '-j');
	
FormFlag returns FormFlag:
	{FormFlag}
	('--form' | '-f');

ProxyFlag returns ProxyFlag:
	'--proxy' ('=' | WS)
		(protocol=STRING ':');
		// Correct regular expression to use
		//((protocol=STRING ':') (proxyProtocol=STRING '://')? | proxyProtocol=STRING '://') (username=STRING ':' password=STRING '@')? (hostname=STRING (':' port=INT)? | (':' (port=INT)?));
		
AuthFlag returns AuthFlag:
	('--auth' | '-a')('='| WS) ;//username=EXTENDED_STRING (':' password=EXTENDED_STRING)? ('@' hostname=BASIC_STRING)?;

DownloadFlag returns DownloadFlag:
	{DownloadFlag}
	('--download' | '-d');
	
HelpFlag returns HelpFlag:
	{HelpFlag}
	('--help' | '-h');

VersionFlag returns VersionFlag:
	{VersionFlag}
	'--version';

VerboseFlag returns VerboseFlag:
	{VerboseFlag}
	('--verbose' | '-v');

TimeoutFlag returns TimeoutFlag:
	'--timeout'('=' | WS) timeout=FLOAT;

// METHODS
/*enum Method returns Method:
	GET = 'GET' | POST = 'POST' | PUT = 'PUT' | DELETE = 'DELETE';

// ITEMS
Item returns Item:
	FormFileFieldItem | DataFieldItem | HttpHeaderItem | UrlParameterItem | RawJsonFieldItem;

FormFileFieldItem returns FormFileFieldItem:
	field=BASIC_STRING '@' value=STRING;

DataFieldItem returns DataFieldItem:
	field=BASIC_STRING '=' (value=BASIC_STRING | '@' value=BASIC_STRING);

HttpHeaderItem returns HttpHeaderItem:
	field=BASIC_STRING ":" value=BASIC_STRING;

UrlParameterItem returns UrlParameterItem:
	field=BASIC_STRING "==" value=STRING;

RawJsonFieldItem returns RawJsonFieldItem:
	{RawJsonFieldItem}
	;//field=BASIC_STRING':=' (value=JsonType| '@' value=JsonType);
	
JsonType returns JsonType:
	JsonBoolean | JsonObject | JsonArray | JsonNumber;

JsonBoolean returns JsonBoolean:
	{JsonBoolean}
	BOOLEAN;

JsonObject returns JsonObject:
	{JsonObject}
	'{' ('\'' | '"' ) '}';

JsonArray returns JsonArray:
	{JsonArray}
	;//'[' (JsonType (',' JsonType)*)? ']';

JsonNumber returns JsonNumber:
	{JsonNumber}
	;*/

terminal BOOLEAN: 'true' | 'false';
terminal fragment DIGIT: '0'..'9';
terminal fragment LETTER: 'a'..'z' | 'A'..'Z';
terminal fragment SPECIAL:  '-' | '.' | '_' | '~' | '/' | '?' | '#' | '[' | ']' | '!' | '$' | '&' | '(' | ')' | '*' | '+' | ',' | '|' | ';' | '%' | ':' | '@';
terminal WS: (' ' | '\t')+;
terminal INT returns ecore::EInt: '0' | ('1'..'9' DIGIT*);
terminal FLOAT returns ecore::EFloat: INT | INT? '.' DIGIT* (('E' | 'e') INT)?;
terminal STRING: (DIGIT | LETTER | SPECIAL)+;