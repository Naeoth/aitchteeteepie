/*
 * generated by Xtext 2.13.0
 */
package aitchteeteepie.xtext.dsl.serializer;

import aitchteeteepie.xtext.dsl.services.CurlBetterThanHttpieGrammarAccess;
import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class CurlBetterThanHttpieSyntacticSequencer extends AbstractSyntacticSequencer {

	protected CurlBetterThanHttpieGrammarAccess grammarAccess;
	protected AbstractElementAlias match_AuthFlag_AKeyword_1_or_AuthKeyword_0;
	protected AbstractElementAlias match_AuthFlag_TimeoutFlag_AKeyword_1_or_AuthKeyword_0_or_TimeoutKeyword;
	protected AbstractElementAlias match_BodyFlag_BKeyword_1_1_or_BodyKeyword_1_0;
	protected AbstractElementAlias match_CommandLineInterface_WSTerminalRuleCall_3_q;
	protected AbstractElementAlias match_DownloadFlag_DKeyword_1_1_or_DownloadKeyword_1_0;
	protected AbstractElementAlias match_FormFlag_FKeyword_1_1_or_FormKeyword_1_0;
	protected AbstractElementAlias match_HeadersFlag_HeaderKeyword_1_0_or_TKeyword_1_1;
	protected AbstractElementAlias match_HelpFlag_HKeyword_1_1_or_HelpKeyword_1_0;
	protected AbstractElementAlias match_JsonFlag_JKeyword_1_1_or_JsonKeyword_1_0;
	protected AbstractElementAlias match_ProxyFlag_EqualsSignKeyword_1_0_or_WSTerminalRuleCall_1_1;
	protected AbstractElementAlias match_VerboseFlag_VKeyword_1_1_or_VerboseKeyword_1_0;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (CurlBetterThanHttpieGrammarAccess) access;
		match_AuthFlag_AKeyword_1_or_AuthKeyword_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getAuthFlagAccess().getAKeyword_1()), new TokenAlias(false, false, grammarAccess.getAuthFlagAccess().getAuthKeyword_0()));
		match_AuthFlag_TimeoutFlag_AKeyword_1_or_AuthKeyword_0_or_TimeoutKeyword = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getAuthFlagAccess().getAKeyword_1()), new TokenAlias(false, false, grammarAccess.getAuthFlagAccess().getAuthKeyword_0()), new TokenAlias(false, false, grammarAccess.getTimeoutFlagAccess().getTimeoutKeyword()));
		match_BodyFlag_BKeyword_1_1_or_BodyKeyword_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getBodyFlagAccess().getBKeyword_1_1()), new TokenAlias(false, false, grammarAccess.getBodyFlagAccess().getBodyKeyword_1_0()));
		match_CommandLineInterface_WSTerminalRuleCall_3_q = new TokenAlias(false, true, grammarAccess.getCommandLineInterfaceAccess().getWSTerminalRuleCall_3());
		match_DownloadFlag_DKeyword_1_1_or_DownloadKeyword_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getDownloadFlagAccess().getDKeyword_1_1()), new TokenAlias(false, false, grammarAccess.getDownloadFlagAccess().getDownloadKeyword_1_0()));
		match_FormFlag_FKeyword_1_1_or_FormKeyword_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getFormFlagAccess().getFKeyword_1_1()), new TokenAlias(false, false, grammarAccess.getFormFlagAccess().getFormKeyword_1_0()));
		match_HeadersFlag_HeaderKeyword_1_0_or_TKeyword_1_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHeadersFlagAccess().getHeaderKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getHeadersFlagAccess().getTKeyword_1_1()));
		match_HelpFlag_HKeyword_1_1_or_HelpKeyword_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHelpFlagAccess().getHKeyword_1_1()), new TokenAlias(false, false, grammarAccess.getHelpFlagAccess().getHelpKeyword_1_0()));
		match_JsonFlag_JKeyword_1_1_or_JsonKeyword_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getJsonFlagAccess().getJKeyword_1_1()), new TokenAlias(false, false, grammarAccess.getJsonFlagAccess().getJsonKeyword_1_0()));
		match_ProxyFlag_EqualsSignKeyword_1_0_or_WSTerminalRuleCall_1_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getProxyFlagAccess().getEqualsSignKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getProxyFlagAccess().getWSTerminalRuleCall_1_1()));
		match_VerboseFlag_VKeyword_1_1_or_VerboseKeyword_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getVerboseFlagAccess().getVKeyword_1_1()), new TokenAlias(false, false, grammarAccess.getVerboseFlagAccess().getVerboseKeyword_1_0()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getWSRule())
			return getWSToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * terminal WS: (' '|'\t')+;
	 */
	protected String getWSToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return " ";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_AuthFlag_AKeyword_1_or_AuthKeyword_0.equals(syntax))
				emit_AuthFlag_AKeyword_1_or_AuthKeyword_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AuthFlag_TimeoutFlag_AKeyword_1_or_AuthKeyword_0_or_TimeoutKeyword.equals(syntax))
				emit_AuthFlag_TimeoutFlag_AKeyword_1_or_AuthKeyword_0_or_TimeoutKeyword(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_BodyFlag_BKeyword_1_1_or_BodyKeyword_1_0.equals(syntax))
				emit_BodyFlag_BKeyword_1_1_or_BodyKeyword_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CommandLineInterface_WSTerminalRuleCall_3_q.equals(syntax))
				emit_CommandLineInterface_WSTerminalRuleCall_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DownloadFlag_DKeyword_1_1_or_DownloadKeyword_1_0.equals(syntax))
				emit_DownloadFlag_DKeyword_1_1_or_DownloadKeyword_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_FormFlag_FKeyword_1_1_or_FormKeyword_1_0.equals(syntax))
				emit_FormFlag_FKeyword_1_1_or_FormKeyword_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeadersFlag_HeaderKeyword_1_0_or_TKeyword_1_1.equals(syntax))
				emit_HeadersFlag_HeaderKeyword_1_0_or_TKeyword_1_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HelpFlag_HKeyword_1_1_or_HelpKeyword_1_0.equals(syntax))
				emit_HelpFlag_HKeyword_1_1_or_HelpKeyword_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_JsonFlag_JKeyword_1_1_or_JsonKeyword_1_0.equals(syntax))
				emit_JsonFlag_JKeyword_1_1_or_JsonKeyword_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ProxyFlag_EqualsSignKeyword_1_0_or_WSTerminalRuleCall_1_1.equals(syntax))
				emit_ProxyFlag_EqualsSignKeyword_1_0_or_WSTerminalRuleCall_1_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_VerboseFlag_VKeyword_1_1_or_VerboseKeyword_1_0.equals(syntax))
				emit_VerboseFlag_VKeyword_1_1_or_VerboseKeyword_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     '--auth' | '-a'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_AuthFlag_AKeyword_1_or_AuthKeyword_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '-a' | '--timeout' | '--auth'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_AuthFlag_TimeoutFlag_AKeyword_1_or_AuthKeyword_0_or_TimeoutKeyword(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '--body' | '-b'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_BodyFlag_BKeyword_1_1_or_BodyKeyword_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'http' (ambiguity) (rule start)
	 *     flags+=Flag (ambiguity) (rule end)
	 */
	protected void emit_CommandLineInterface_WSTerminalRuleCall_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '--download' | '-d'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_DownloadFlag_DKeyword_1_1_or_DownloadKeyword_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '-f' | '--form'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_FormFlag_FKeyword_1_1_or_FormKeyword_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '-t' | '--header'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_HeadersFlag_HeaderKeyword_1_0_or_TKeyword_1_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '--help' | '-h'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_HelpFlag_HKeyword_1_1_or_HelpKeyword_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '-j' | '--json'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_JsonFlag_JKeyword_1_1_or_JsonKeyword_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS | '='
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) '--proxy' (ambiguity) protocol=BASIC_STRING
	 *     (rule start) '--proxy' (ambiguity) proxyProtocol=BASIC_STRING
	 */
	protected void emit_ProxyFlag_EqualsSignKeyword_1_0_or_WSTerminalRuleCall_1_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '-v' | '--verbose'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_VerboseFlag_VKeyword_1_1_or_VerboseKeyword_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
